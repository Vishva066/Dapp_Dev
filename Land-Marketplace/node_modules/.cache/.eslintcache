[{"/home/vishva/Ethlab/Land-Marketplace-Template-main/src/index.js":"1","/home/vishva/Ethlab/Land-Marketplace-Template-main/src/App.js":"2","/home/vishva/Ethlab/Land-Marketplace-Template-main/src/components/HomePage.js":"3","/home/vishva/Ethlab/Land-Marketplace-Template-main/src/components/Auction.js":"4","/home/vishva/Ethlab/Land-Marketplace-Template-main/src/components/NewLand.js":"5","/home/vishva/Ethlab/Land-Marketplace-Template-main/src/components/MarketPlace.js":"6"},{"size":218,"mtime":1644257060000,"results":"7","hashOfConfig":"8"},{"size":1068,"mtime":1672392844026,"results":"9","hashOfConfig":"8"},{"size":2132,"mtime":1672394240314,"results":"10","hashOfConfig":"8"},{"size":7115,"mtime":1672401108008,"results":"11","hashOfConfig":"8"},{"size":8178,"mtime":1672397618504,"results":"12","hashOfConfig":"8"},{"size":4101,"mtime":1672398411647,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p0d791",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/vishva/Ethlab/Land-Marketplace-Template-main/src/index.js",[],"/home/vishva/Ethlab/Land-Marketplace-Template-main/src/App.js",[],"/home/vishva/Ethlab/Land-Marketplace-Template-main/src/components/HomePage.js",[],"/home/vishva/Ethlab/Land-Marketplace-Template-main/src/components/Auction.js",["29"],"import React, { useState, useEffect } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport {\n  NavLink,\n  useParams,\n} from \"react-router-dom\";\n\nimport { Table, Divider } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nconst columns = [\n  {\n    title: \"Bidder\",\n    dataIndex: \"bidder\",\n    key: \"bidder\",\n  },\n  {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n  },\n];\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default function Auction(props) {\n  const myContract = props.myContract;\n  const ethereum = window.ethereum;\n  const web3 = props.web3;\n\n  useEffect(() => {\n    getLandDetails();\n    getEventDetails();\n  }, []);\n\n  let { landId } = useParams();\n  let [isOwner, setIsOwner] = useState(false);\n  const [landData, setLandData] = useState();\n  const [landDocs, setLandDocs] = useState();\n  const [landPrice, setLandPrice] = useState();\n  const [eventDetails, setEventDetails] = useState(\"\");\n\n  const getLandDetails = async () => {\n    let land = await myContract.methods.getLandDetails(landId).call();\n    let owner = await myContract.methods.ownerOf(landId).call();\n\n    if (owner.toUpperCase() === ethereum.selectedAddress.toUpperCase()) {\n      setIsOwner(true);\n    }\n\n    setLandDocs(web3.utils.hexToUtf8(land.documentHash));\n    setLandData(land);\n  };\n\n  const getEventDetails = async () => {\n    myContract.getPastEvents(\"BidEvent\",\n      {\n        filter: { landID: landId },\n        fromBlock: 0,\n        toBlock: \"latest\",\n      }, async (err, events) => {\n        let eventDetails = [];\n        for (let i = 0; i < events.length; i++) {\n          let newEvent = {\n            key: i,\n            bidder: events[i].returnValues[1],\n            amount: events[i].returnValues[2],\n          };\n          eventDetails.unshift(newEvent);\n        }\n        setEventDetails(eventDetails);\n      }\n    );\n  };\n\n  const priceChangeHandler = (event) => {\n    setLandPrice(event.target.value);\n  };\n\n  const bidSubmitHandler = async (event) => {\n    await myContract.methods\n      .bid(landId)\n      .send({ from: ethereum.selectedAddress, value: landPrice });\n  };\n\n  const acceptBidSubmitHandler = async (event) => {\n    await myContract.methods\n    .acceptBid(landId)\n    .send({ from: ethereum.selectedAddress });\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Tooltip title=\"Back to Marketplace\">\n              <IconButton\n                size=\"large\"\n                color=\"inherit\"\n              >\n                <NavLink to=\"/\" ><ArrowBackIcon /></NavLink>\n              </IconButton>\n            </Tooltip>\n            <Typography variant=\"h5\" component=\"div\" sx={{ flexGrow: 1 }}>\n              LAND MARKETPLACE\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Box\n        sx={{\n          paddingLeft: 15,\n          paddingTop: 2,\n          paddingBottom: 2,\n          flexGrow: 1,\n          maxWidth: \"90%\",\n        }}\n      >\n        {landData != null && (\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <img src={process.env.PUBLIC_URL + \"/landSale.png\"} alt=\"A\" />\n            </Grid>\n            <Grid item xs={6}>\n              <Item>\n                <Typography align=\"left\">\n                  <b>Land ID: </b>\n                  {landId}\n                </Typography>\n              </Item>\n              <br />\n              <Item>\n                <Typography align=\"left\">\n                  <b>Survey No: </b>\n                  {landData.surveyNo}\n                </Typography>\n              </Item>\n              <br />\n              <Item>\n                <Typography align=\"left\">\n                  <b>District: </b>\n                  {landData.district}\n                </Typography>\n              </Item>\n              <br />\n              <Item>\n                <Typography align=\"left\">\n                  <b>Taluk: </b>\n                  {landData.taluk}\n                </Typography>\n              </Item>\n              <br />\n              <Item>\n                <Typography align=\"left\">\n                  <b>Village: </b>\n                  {landData.village}\n                </Typography>\n              </Item>\n              <br />\n              <Item>\n                <Typography align=\"left\">\n                  <b>Block No: </b>\n                  {landData.blockNo}\n                </Typography>\n              </Item>\n              <br />\n              <Item>\n                <Typography align=\"left\">\n                  <b>Area: </b>\n                  {landData.area} Ares\n                </Typography>\n              </Item>\n              <br />\n              <Item>\n                <Typography align=\"left\">\n                  <b>View Documents: </b>\n                  <a href={landDocs} target=\"_blank\" rel=\"noopener noreferrer\">{landDocs}</a>\n                </Typography>\n              </Item>\n              <br />\n              <Item>\n                <Typography align=\"left\">\n                  <b> Price (Wei): </b>\n                  {landData.landValue}\n                </Typography>\n              </Item>\n              <br />\n            </Grid>\n            {isOwner ?\n              <Grid item xs={12}>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  onClick={acceptBidSubmitHandler}\n                  sx={{ height: 40 }}\n                  color=\"primary\"\n                >\n                  Accept Bid\n                </Button>\n              </Grid> :\n              <>\n                <Grid item xs={6}>\n                  <TextField\n                    required\n                    label=\"Bid Value\"\n                    helperText=\"Provide your bid value (should be greater than last bid)\"\n                    variant=\"outlined\"\n                    onChange={priceChangeHandler}\n                    sx={{ width: \"100%\" }}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <Button\n                    fullWidth\n                    sx={{ height: 55 }}\n                    onClick={bidSubmitHandler}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Place Bid\n                  </Button>\n                </Grid>\n              </>}\n          </Grid>\n        )}\n        <Divider />\n        <Table columns={columns} dataSource={eventDetails} />\n      </Box>\n    </div>\n  );\n}","/home/vishva/Ethlab/Land-Marketplace-Template-main/src/components/NewLand.js",["30","31"],"import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport LandscapeIcon from \"@mui/icons-material/Landscape\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { create } from \"ipfs-http-client\";\r\n\r\nconst districts = [\r\n  \"Thiruvanathapuram\",\r\n  \"Kollam\",\r\n  \"Pathanamthitta\",\r\n  \"Alappuzha\",\r\n  \"Kottayam\",\r\n  \"Idukki\",\r\n  \"Ernakulam\",\r\n  \"Thrissur\",\r\n  \"Palakkad\",\r\n  \"Malappuram\",\r\n  \"Wayanad\",\r\n  \"Kozhikode\",\r\n  \"Kannur\",\r\n  \"Kasargod\",\r\n];\r\n\r\nexport default function NewLand(props) {\r\n\r\n  const [district, setDistrict] = React.useState(\"\");\r\n  const [taluk, setTaluk] = useState(\"\");\r\n  const [surveyNo, setSurveyNo] = useState(\"\");\r\n  const [village, setVillage] = useState(\"\");\r\n  const [blockNo, setBlockNo] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [hash, setHash] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [fileName, setFileName] = useState(\"\");\r\n\r\n  const myContract = props.myContract;\r\n  const ethereum = window.ethereum;\r\n  const web3 = props.web3;\r\n\r\n  const ipfs = create(\"https://ipfs.infura.io:5001/api/v0\");\r\n  \r\n\r\n  const handleDistricChange = (event) => {\r\n    setDistrict(event.target.value);\r\n  };\r\n\r\n  const talukChangeHandler = (event) => {\r\n    setTaluk(event.target.value);\r\n  };\r\n\r\n  const surveyNoChangeHandler = (event) => {\r\n    setSurveyNo(event.target.value);\r\n  };\r\n\r\n  const villageChangeHandler = (event) => {\r\n    setVillage(event.target.value);\r\n  };\r\n\r\n  const blockNoChangeHandler = (event) => {\r\n    setBlockNo(event.target.value);\r\n  };\r\n\r\n  const priceChangeHandler = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n\r\n  const areaChangeHandler = (event) => {\r\n    setArea(event.target.value);\r\n  };\r\n\r\n  const fileChangeHandler = (event) => {\r\n    setFile(event.target.files[0]);\r\n    setFileName(event.target.files[0].name);\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n\r\n    let url;\r\n    try {\r\n      const added = await ipfs.add(file);\r\n      url = 'https://ipfs.infura.io/ipfs/' + added.path;\r\n    } catch (error) {\r\n      console.log(\"Error uploading file: \", error);\r\n    }\r\n\r\n    await myContract.methods.registerNewLand(surveyNo,district,taluk,village,blockNo,price,area,web3.utils.asciiToHex(url)).send({ from: ethereum.selectedAddress });\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Tooltip title=\"Back to Marketplace\">\r\n              <IconButton\r\n                size=\"large\"\r\n                color=\"inherit\"\r\n              >\r\n                <NavLink to=\"/\" ><ArrowBackIcon /></NavLink>\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Typography variant=\"h5\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              LAND MARKETPLACE\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      <Box sx={{ paddingLeft: 30, paddingTop: 2, flexGrow: 1, maxWidth: \"80%\" }}>\r\n        <div>\r\n          <Typography variant=\"h4\">\r\n            Register a Land for Sale!{\" \"}\r\n            <LandscapeIcon fontSize=\"large\" color=\"secondary\" />\r\n          </Typography>\r\n        </div>\r\n        <br />\r\n\r\n        <form noValidate onSubmit={submitHandler}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                required\r\n                label=\"DISTRICT\"\r\n                value={district}\r\n                onChange={handleDistricChange}\r\n                helperText=\"Select the district where the land is located\"\r\n                variant=\"outlined\"\r\n                sx={{ width: \"100%\" }}\r\n              >\r\n                {districts.map((district) => (\r\n                  <MenuItem key={district} value={district}>\r\n                    {district}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                required\r\n                label=\"TALUK\"\r\n                id=\"taluk\"\r\n                helperText=\"Provide the taluk name where the land is located\"\r\n                variant=\"outlined\"\r\n                onChange={talukChangeHandler}\r\n                sx={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                required\r\n                label=\"VILLAGE\"\r\n                id=\"village\"\r\n                helperText=\"Provide the village name where the land is located\"\r\n                variant=\"outlined\"\r\n                onChange={villageChangeHandler}\r\n                sx={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"filled-basic\"\r\n                required\r\n                label=\"Survey No.\"\r\n                variant=\"outlined\"\r\n                helperText=\"Provide the Survey No. of the land\"\r\n                onChange={surveyNoChangeHandler}\r\n                sx={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"filled-basic\"\r\n                label=\"Block No.\"\r\n                helperText=\"Provide the Block No of the ward where the land is located\"\r\n                variant=\"outlined\"\r\n                onChange={blockNoChangeHandler}\r\n                sx={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"filled-basic\"\r\n                label=\"Area\"\r\n                helperText=\"Provide the land area (in ares)\"\r\n                variant=\"outlined\"\r\n                onChange={areaChangeHandler}\r\n                sx={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                label=\"PRICE\"\r\n                variant=\"outlined\"\r\n                helperText=\"Provide the auction start price for the land (specify in wei)\"\r\n                onChange={priceChangeHandler}\r\n                sx={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <div>\r\n                <Typography>\r\n                  Upload all the required documents in a single PDF file.\r\n                </Typography>\r\n                <input\r\n                  accept=\"application/pdf\"\r\n                  onChange={fileChangeHandler}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button variant=\"contained\" component=\"span\">\r\n                    Upload Documents\r\n                  </Button>\r\n                  <p>{fileName}</p>\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <Typography variant=\"h6\">\r\n                  <b>DECLARATION</b>\r\n                </Typography>\r\n                <Typography>\r\n                  I agree that the above information is correct and complete to\r\n                  the best of my knowledge and belief.\r\n                </Typography>\r\n                <br />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Register Land for Auction\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","/home/vishva/Ethlab/Land-Marketplace-Template-main/src/components/MarketPlace.js",["32"],"import React, { useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport Button from \"@mui/material/Button\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Typography from \"@mui/material/Typography\";\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function MarketPlace(props) {\n  const myContract = props.myContract;\n  const history = useHistory();\n\n  const redirectHandle = (id) => {\n    history.push(`/land/${id}`);\n  };\n\n  const [landDetails, setLandDetails] = React.useState([]);\n\n  useEffect(() => {\n    getLandDetails();\n  }, []);\n\n  const getLandDetails = async () => {\n\n    let landCount = await myContract.methods.registeredLandCount().call();\n\n\n    let landDetailsList = [];\n\n    for (let i = 0; i < landCount; i++) {\n      let LandList = await myContract.methods.getLandDetails(i).call();\n      let owner = await myContract.methods.ownerOf(i).call();\n      let newLand = {\n        key: i,\n        address: owner,\n        area: LandList.area,\n        price: LandList.landValue,\n      };\n      landDetailsList.push(newLand);\n    }\n\n    let newLand = {\n      key: 0,\n      address: \"[ Land Owner Address ]\",\n      area: \"[ Area ]\",\n      price: \"[ Amount in wei ]\",\n      status: true\n    };\n    let newLand2 = {\n      key: 1,\n      address: \"[ Land Owner Address ]\",\n      area: \"[ Area ]\",\n      price: \"[ Amount in wei ]\",\n      status: false\n    };\n    landDetailsList.push(newLand);\n    landDetailsList.push(newLand2);\n    await setLandDetails(landDetailsList);\n  };\n\n  return (\n    <Box\n      sx={{\n        paddingLeft: 15,\n        paddingTop: 2,\n        paddingBottom: 2,\n        flexGrow: 1,\n        maxWidth: \"90%\",\n      }}\n    >\n      <Grid container spacing={2}>\n        {landDetails.map((land) => (\n          <Grid item xs={4}>\n            {land.status\n              ? <Card\n                id={land.key}\n                sx={{ maxWidth: 440 }}\n                key={land.key}\n                value={land}\n              >\n                <CardMedia\n                  component=\"img\"\n                  height=\"140\"\n                  image={process.env.PUBLIC_URL + \"landSold.png\"}\n                  alt=\"land sold\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    ID: {land.key}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    <b>Owner:</b><br />\n                    {land.address} <br />\n                    <b>Area:</b> {land.area} Ares<br />\n                    <b>Price:</b> N/A\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <h4>SOLD!!</h4>\n                </CardActions>\n              </Card>\n              : <Card\n                id={land.key}\n                sx={{ maxWidth: 440 }}\n                key={land.key}\n                value={land}\n              >\n                <CardMedia\n                  component=\"img\"\n                  height=\"140\"\n                  image={process.env.PUBLIC_URL + \"landSale.png\"}\n                  alt=\"land for sale\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    ID: {land.key}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    <b>Owner:</b><br />\n                    {land.address} <br />\n                    <b>Area:</b> {land.area} Ares<br />\n                    <b>Price:</b> {land.price}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" onClick={() => redirectHandle(land.key)}>More Details</Button>\n                </CardActions>\n              </Card>\n            }\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n",{"ruleId":"33","severity":1,"message":"34","line":50,"column":6,"nodeType":"35","endLine":50,"endColumn":8,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":43,"column":10,"nodeType":"39","messageId":"40","endLine":43,"endColumn":14},{"ruleId":"37","severity":1,"message":"41","line":43,"column":16,"nodeType":"39","messageId":"40","endLine":43,"endColumn":23},{"ruleId":"33","severity":1,"message":"42","line":25,"column":6,"nodeType":"35","endLine":25,"endColumn":8,"suggestions":"43"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getEventDetails' and 'getLandDetails'. Either include them or remove the dependency array.","ArrayExpression",["44"],"no-unused-vars","'hash' is assigned a value but never used.","Identifier","unusedVar","'setHash' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLandDetails'. Either include it or remove the dependency array.",["45"],{"desc":"46","fix":"47"},{"desc":"48","fix":"49"},"Update the dependencies array to be: [getEventDetails, getLandDetails]",{"range":"50","text":"51"},"Update the dependencies array to be: [getLandDetails]",{"range":"52","text":"53"},[1287,1289],"[getEventDetails, getLandDetails]",[754,756],"[getLandDetails]"]